language: c
sudo: false
dist: xenial
branches:
  except:
    - appveyor
compiler:
 - gcc
addons:
 apt:
  packages:
   - pkg-config
   - bsdtar
   - libgraphite2-dev
   - libicu-dev
   - libreadline-dev
   - libssl-dev
   - libfreetype6-dev
   - libfontconfig1-dev
   - libpng-dev
   - libexpat1-dev
   - libipc-run-perl
env:
  global:
   - LUAROCKS=2.4.2
   - GRAPHITE=true
   - COVERAGE=false
   - MAKEFLAGS="--jobs=4"
  matrix:
   - LUA=lua5.3 HARFBUZZ=2.5.1 COVERAGE=true
   - LUA=lua5.3 HARFBUZZ=1.4.2
   - LUA=lua5.3 HARFBUZZ=1.1.3
   - LUA=lua5.2 HARFBUZZ=2.5.1
   - LUA=lua5.1 HARFBUZZ=2.5.1
   - LUA=luajit HARFBUZZ=2.5.1
cache:
  directories:
  - $HOME/local
  - $TRAVIS_BUILD_DIR/.fonts
  - $TRAVIS_BUILD_DIR/lua_modules
  - $TRAVIS_BUILD_DIR/libtexpdf
before_install:
 - source .travis/setenv_lua.sh
 - export LD_LIBRARY_PATH=$HOME/local/lib:$LD_LIBRARY_PATH
 - export LIBRARY_PATH=$HOME/local/lib:$LD_LIBRARY_PATH
 - export LD_RUN_PATH=$HOME/local/lib:$LD_RUN_PATH
 - export PKG_CONFIG_PATH=$HOME/local/lib/pkgconfig:$PKG_CONFIG_PATH
 - if [ ! -f ~/local/include/harfbuzz/hb.h ]; then
      mkdir ~/local || true;
      mkdir ~/builddeps || true;
      pushd ~/builddeps ;
      wget https://github.com/harfbuzz/harfbuzz/archive/${HARFBUZZ}.tar.gz ;
      tar xfz ${HARFBUZZ}.tar.gz ;
      cd harfbuzz-${HARFBUZZ} ;
      ./autogen.sh --with$($GRAPHITE || echo 'out')-graphite2 --prefix=$HOME/local/ ;
      make ;
      make install ;
      popd ;
   fi
 - export LUA_HOME_DIR=$TRAVIS_BUILD_DIR/install/lua
 - export LUA=~/.lua/lua
 - export LUA_INCLUDE=-I$LUA_HOME_DIR/include
 - export LD_LIBRARY_PATH=$LUA_HOME_DIR/lib:$LD_LIBRARY_PATH
 - export LIBRARY_PATH=$LUA_HOME_DIR/lib:$LD_LIBRARY_PATH
 - export LD_RUN_PATH=$LUA_HOME_DIR/lib:$LD_RUN_PATH
 - export PATH=.travis:$PATH
before_scipt:
  - eval $(luarocks --tree lua_modules path)
install:
 - luarocks install busted
 - luarocks install luacov 0.8-1
 - luarocks install luacov-coveralls
script:
 - fold_unless_fail 'Building' 'build' sh -c './bootstrap.sh && ./configure && make'
 - fold_unless_fail 'Busted' 'busted'  busted --cpath="core/?.so" --lpath='./lua-libraries/?.lua;./lua-libraries/?/init.lua' tests
 - fold_unless_fail 'Fetch resources used in tests' 'regression' make --output-sync testprep
 - fold_unless_fail 'Run regression tests' 'regression' make --output-sync test
 - fold_unless_fail 'Compile documentation and examples' 'compile_docs' make --output-sync docs examples
after_success:
 - $COVERAGE && travis_wait make coverage
 - $COVERAGE && travis_wait luacov-coveralls -e lua-libraries -e lua_modules
